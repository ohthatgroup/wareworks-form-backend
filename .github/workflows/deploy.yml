name: Deploy WareWorks Application

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

jobs:
  # Lint and Test
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd apps/form-app && npm ci

      - name: Run linting
        run: |
          cd apps/form-app && npm run lint

      - name: Run type checking
        run: |
          cd apps/form-app && npx tsc --noEmit

      - name: Run tests
        run: |
          cd apps/form-app && npm test -- --watchAll=false

  # Build Application
  build:
    runs-on: ubuntu-latest
    needs: quality-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd apps/form-app && npm ci

      - name: Build application
        run: |
          cd apps/form-app && npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ github.ref == 'refs/heads/main' && 'https://apply.wareworks.me' || format('https://deploy-preview-{0}--wareworks-form.netlify.app', github.event.number) }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: apps/form-app/.next
          retention-days: 1

  # Deploy to Netlify
  deploy:
    runs-on: ubuntu-latest
    needs: [quality-check, build]
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: apps/form-app/.next

      - name: Deploy to Netlify (Production)
        if: github.ref == 'refs/heads/main'
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod --dir=apps/form-app/.next
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deploy to Netlify (Preview)
        if: github.event_name == 'pull_request'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=apps/form-app/.next
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Comment PR with deploy URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const deployUrl = `https://deploy-preview-${context.issue.number}--wareworks-form.netlify.app`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üöÄ Deploy Preview Ready!
              
              **Application**: ${deployUrl}
              **Functions**: ${deployUrl}/.netlify/functions/
              
              ### Test Checklist:
              - [ ] Form loads correctly
              - [ ] All validation works
              - [ ] File uploads function
              - [ ] Submission completes
              - [ ] Mobile responsive
              
              *Deploy triggered by commit: ${context.sha.slice(0, 7)}*`
            });

  # Security and Performance Checks
  security-scan:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: |
          npm audit --audit-level=moderate
          cd apps/form-app && npm audit --audit-level=moderate

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  # Performance Testing (Lighthouse CI)
  performance:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://apply.wareworks.me
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  # Notify on Success/Failure
  notify:
    runs-on: ubuntu-latest
    needs: [deploy, security-scan, performance]
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: Notify success
        if: needs.deploy.result == 'success'
        run: |
          echo "‚úÖ WareWorks application deployed successfully!"
          echo "üåê Live URL: https://apply.wareworks.me"
          echo "üìä Functions: https://apply.wareworks.me/.netlify/functions/"

      - name: Notify failure
        if: needs.deploy.result == 'failure'
        run: |
          echo "‚ùå Deployment failed!"
          echo "Check the logs above for details."
          exit 1

# Environment Variables Required in GitHub Secrets:
# NETLIFY_AUTH_TOKEN - Your Netlify personal access token
# NETLIFY_SITE_ID - Your Netlify site ID

# Optional Environment Variables for Production:
# GOOGLE_SHEETS_ID
# GOOGLE_SERVICE_ACCOUNT_EMAIL  
# GOOGLE_PRIVATE_KEY
# GMAIL_USER
# GMAIL_APP_PASSWORD
# HR_EMAIL